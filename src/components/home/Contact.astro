<!-- Contact.astro -->
<section class="mx-auto h-full w-full max-w-7xl px-4 py-16">
  <div class="grid h-full gap-4 md:gap-6">
    {/* Responsive Grid for Contact Info & Social - Mobile First */}
    <div class="grid grid-cols-1 gap-4 md:grid-cols-3 md:gap-6 lg:grid-cols-3">
      {/* Contact Info - Full width on mobile, 2 columns on larger screens */}
      <div
        class="col-span-1 rounded-3xl bg-green-600 p-4 dark:bg-blue-600 sm:p-6 md:col-span-2 md:p-8"
      >
        <div class="flex h-full flex-col justify-between">
          <div class="space-y-4 sm:space-y-6">
            <h2
              class="font-nunito-sans text-2xl font-bold text-neutral-100 sm:text-3xl md:text-4xl"
            >
              Contact Us
            </h2>
            <div class="space-y-1 sm:space-y-2">
              <p
                class="flex items-center gap-2 text-sm text-neutral-100 sm:gap-3 sm:text-base md:text-lg"
              >
                <i class="ri-phone-line ri-lg sm:ri-xl"></i>
                +62 (29) 123 44 56
              </p>
              <p
                class="flex items-center gap-2 text-sm text-neutral-100 sm:gap-3 sm:text-base md:text-lg"
              >
                <i class="ri-mail-line ri-lg sm:ri-xl"></i>
                modern@mail.com
              </p>
              <p
                class="flex items-center gap-2 text-sm text-neutral-100 sm:gap-3 sm:text-base md:text-lg"
              >
                <i class="ri-time-line ri-lg sm:ri-xl"></i>
                Mon-Fri: 9:00 - 17:00
              </p>
            </div>
          </div>

          {/* Date Display - Responsive Typography */}
          <div
            class="mt-4 flex flex-col gap-1 border-t border-neutral-100/20 pt-6 sm:mt-6 sm:gap-2 md:mt-8 md:pt-8"
          >
            <p
              class="font-nunito-sans text-base font-semibold text-neutral-100 sm:text-lg md:text-xl"
            >
              {new Date().toLocaleDateString('en-US', { weekday: 'long' })}
            </p>
            <p class="font-nunito-sans text-base text-neutral-100 sm:text-lg md:text-xl">
              {
                new Date().toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric',
                })
              }
            </p>
          </div>
        </div>
      </div>

      {/* Social Icons - Full width on mobile, 1 column on larger screens */}
      <div
        class="col-span-1 rounded-3xl border-2 border-green-600 p-4 dark:border-blue-600 sm:p-6 md:p-8"
      >
        <div class="flex h-full flex-col justify-center">
          {/* Responsive Social Icons Alignment */}
          <div class="flex justify-center gap-4 sm:gap-6">
            <a
              href="https://www.facebook.com/"
              target="_blank"
              class="flex items-center justify-center rounded-full bg-neutral-700 px-3 py-4 text-neutral-100 transition-colors duration-500 hover:bg-accent-orange-500 dark:bg-neutral-200 dark:text-neutral-700 dark:hover:bg-blue-600 dark:hover:text-neutral-100"
            >
              <span class="sr-only">Facebook</span>
              <i class="ri-facebook-line ri-xl"></i>
            </a>
            <a
              href="https://www.whatsapp.com/"
              target="_blank"
              class="flex items-center justify-center rounded-full bg-neutral-700 px-3 py-4 text-neutral-100 transition-colors duration-500 hover:bg-accent-orange-500 dark:bg-neutral-200 dark:text-neutral-700 dark:hover:bg-blue-600 dark:hover:text-neutral-100"
            >
              <span class="sr-only">Whatsapp</span>
              <i class="ri-whatsapp-line ri-xl"></i>
            </a>
            <a
              href="https://www.instagram.com/"
              target="_blank"
              class="flex items-center justify-center rounded-full bg-neutral-700 px-3 py-4 text-neutral-100 transition-colors duration-500 hover:bg-accent-orange-500 dark:bg-neutral-200 dark:text-neutral-700 dark:hover:bg-blue-600 dark:hover:text-neutral-100"
            >
              <span class="sr-only">Instagram</span>
              <i class="ri-instagram-line ri-xl"></i>
            </a>
          </div>

          {/* Responsive Text */}
          <div class="mt-4 text-center sm:mt-6 md:mt-8">
            <h3
              class="mb-2 font-nunito-sans text-xl font-semibold text-neutral-950 dark:text-neutral-100 sm:mb-4 sm:text-2xl"
            >
              Connect With Us
            </h3>
            <p class="text-sm text-neutral-700 dark:text-neutral-300 sm:text-base md:text-lg">
              Follow us on social media to stay updated with our latest news, projects, and
              insights.
            </p>
          </div>
        </div>
      </div>
    </div>

    {/* Responsive Map */}
    <div class="h-48 overflow-hidden rounded-3xl sm:h-64 md:h-80">
      <!-- <canvas id="nCanvasRender"></canvas> -->
    </div>
  </div>

  <!-- <script type="module">
    (function () {
      // Hungarian notation
      // (http://en.wikipedia.org/wiki/Hungarian_notation)
      // n - HTML-Node
      // o - object
      // s - string
      // i - integer
      // a - array
      // b - boolean
      // f - float
      // p - Particle
      // fn - function
      // ctx - 2D Context

      // General Functions
      var app, fnAddEventListener, fnRequestAnimationFrame;

      fnRequestAnimationFrame = function (fnCallback) {
        var fnAnimFrame;
        fnAnimFrame =
          window.requestAnimationFrame ||
          window.webkitRequestAnimationFrame ||
          window.mozRequestAnimationFrame ||
          window.oRequestAnimationFrame ||
          window.msRequestAnimationFrame ||
          function (fnCallback) {
            window.setTimeOut(fnCallback, 1000 / 60);
          };
        fnAnimFrame(fnCallback);
      };

      // Add Event Listener
      fnAddEventListener = function (o, sEvent, fn) {
        if (o.addEventListener) {
          o.addEventListener(sEvent, fn, false);
        } else {
          o['on' + sEvent] = fn;
        }
      };

      app = function () {
        var Particle,
          ctxRender,
          fAngle,
          fCosAngle,
          fMaxAX,
          fMaxAY,
          fMaxAZ,
          fPI,
          fSinAngle,
          fStartVX,
          fStartVY,
          fStartVZ,
          fVX,
          fnACos,
          fnCos,
          fnMax,
          fnMin,
          fnNextFrame,
          fnRender,
          fnRnd,
          fnRnd2,
          fnSetSize,
          fnSin,
          fnSwapList,
          gui,
          h,
          iProjSphereX,
          iProjSphereY,
          iRadiusSphere,
          nBody,
          oBuffer,
          oDoc,
          oRadGrad,
          oRender,
          oStats,
          w;
        // oStats = new Stats();
        // oStats.setMode(0);

        // General Elements
        oDoc = document;
        nBody = oDoc.body;
        // Shortcuts
        fPI = Math.PI;
        fnMax = Math.max;
        fnMin = Math.min;
        fnRnd = Math.random;
        fnRnd2 = function () {
          return 2.0 * fnRnd() - 1.0;
        };
        fnCos = Math.cos;
        fnACos = Math.acos;
        fnSin = Math.sin;
        // Sphere Settings
        iRadiusSphere = 150;
        iProjSphereX = 0;
        iProjSphereY = 0;
        // Particle Settings
        fMaxAX = 0.1;
        fMaxAY = 0.1;
        fMaxAZ = 0.1;
        fStartVX = 0.001;
        fStartVY = 0.001;
        fStartVZ = 0.001;
        fAngle = 0.0;
        fSinAngle = 0.0;
        fCosAngle = 0.0;
        window.iFramesToRotate = 500.0;
        window.iPerspective = 250;
        window.iNewParticlePerFrame = 10;
        window.fGrowDuration = 200.0;
        window.fWaitDuration = 50.0;
        window.fShrinkDuration = 250.0;
        window.aColor = [255, 255, 255];
        fVX = (2.0 * fPI) / window.iFramesToRotate;
        oRadGrad = null;
        ctxRender = nCanvasRender.getContext('2d');
        oRender = {
          pFirst: null,
        };
        oBuffer = {
          pFirst: null,
        };
        w = h = 0;
        // gets/sets size
        fnSetSize = function () {
          nCanvasRender.width = w = window.innerWidth;
          nCanvasRender.height = h = window.innerHeight;
          iProjSphereX = w / 2;
          iProjSphereY = h / 2;
          return {
            w: w,
            h: h,
          };
        };
        fnSetSize();

        // window.onresize
        fnAddEventListener(window, 'resize', fnSetSize);
        fnSwapList = function (p, oSrc, oDst) {
          if (p != null) {
            // remove p from oSrc
            if (oSrc.pFirst === p) {
              oSrc.pFirst = p.pNext;
              if (p.pNext != null) {
                p.pNext.pPrev = null;
              }
            } else {
              p.pPrev.pNext = p.pNext;
              if (p.pNext != null) {
                p.pNext.pPrev = p.pPrev;
              }
            }
          } else {
            // create new p
            p = new Particle();
          }
          p.pNext = oDst.pFirst;
          if (oDst.pFirst != null) {
            oDst.pFirst.pPrev = p;
          }
          oDst.pFirst = p;
          p.pPrev = null;
          return p;
        };
        Particle = function () {
          // Particle
          class Particle {
            fnInit() {
              this.fAngle = fnRnd() * fPI * 2;
              this.fForce = fnACos(fnRnd2());
              this.fAlpha = 0;
              this.bIsDead = false;
              this.iFramesAlive = 0;
              this.fX = iRadiusSphere * fnSin(this.fForce) * fnCos(this.fAngle);
              this.fY = iRadiusSphere * fnSin(this.fForce) * fnSin(this.fAngle);
              this.fZ = iRadiusSphere * fnCos(this.fForce);
              this.fVX = fStartVX * this.fX;
              this.fVY = fStartVY * this.fY;
              this.fVZ = fStartVZ * this.fZ;
              this.fGrowDuration = window.fGrowDuration + fnRnd2() * (window.fGrowDuration / 4.0);
              this.fWaitDuration = window.fWaitDuration + fnRnd2() * (window.fWaitDuration / 4.0);
              this.fShrinkDuration =
                window.fShrinkDuration + fnRnd2() * (window.fShrinkDuration / 4.0);
              this.fAX = 0.0;
              this.fAY = 0.0;
              this.fAZ = 0.0;
            }

            fnUpdate() {
              if (this.iFramesAlive > this.fGrowDuration + this.fWaitDuration) {
                this.fVX += this.fAX + fMaxAX * fnRnd2();
                this.fVY += this.fAY + fMaxAY * fnRnd2();
                this.fVZ += this.fAZ + fMaxAZ * fnRnd2();
                this.fX += this.fVX;
                this.fY += this.fVY;
                this.fZ += this.fVZ;
              }
              this.fRotX = fCosAngle * this.fX + fSinAngle * this.fZ;
              this.fRotZ = -fSinAngle * this.fX + fCosAngle * this.fZ;
              this.fRadiusCurrent = Math.max(
                0.01,
                window.iPerspective / (window.iPerspective - this.fRotZ)
              );
              this.fProjX = this.fRotX * this.fRadiusCurrent + iProjSphereX;
              this.fProjY = this.fY * this.fRadiusCurrent + iProjSphereY;
              this.iFramesAlive += 1;
              if (this.iFramesAlive < this.fGrowDuration) {
                this.fAlpha = (this.iFramesAlive * 1.0) / this.fGrowDuration;
              } else if (this.iFramesAlive < this.fGrowDuration + this.fWaitDuration) {
                this.fAlpha = 1.0;
              } else if (
                this.iFramesAlive <
                this.fGrowDuration + this.fWaitDuration + this.fShrinkDuration
              ) {
                this.fAlpha =
                  ((this.fGrowDuration +
                    this.fWaitDuration +
                    this.fShrinkDuration -
                    this.iFramesAlive) *
                    1.0) /
                  this.fShrinkDuration;
              } else {
                this.bIsDead = true;
              }
              if (this.bIsDead === true) {
                fnSwapList(this, oRender, oBuffer);
              }
              this.fAlpha *= fnMin(1.0, fnMax(0.5, this.fRotZ / iRadiusSphere));
              this.fAlpha = fnMin(1.0, fnMax(0.0, this.fAlpha));
            }
          }

          // Current Position
          Particle.prototype.fX = 0.0;

          Particle.prototype.fY = 0.0;

          Particle.prototype.fZ = 0.0;

          // Current Velocity
          Particle.prototype.fVX = 0.0;

          Particle.prototype.fVY = 0.0;

          Particle.prototype.fVZ = 0.0;

          // Current Acceleration
          Particle.prototype.fAX = 0.0;

          Particle.prototype.fAY = 0.0;

          Particle.prototype.fAZ = 0.0;

          // Projection Position
          Particle.prototype.fProjX = 0.0;

          Particle.prototype.fProjY = 0.0;

          // Rotation
          Particle.prototype.fRotX = 0.0;

          Particle.prototype.fRotZ = 0.0;

          // double linked list
          Particle.prototype.pPrev = null;

          Particle.prototype.pNext = null;

          Particle.prototype.fAngle = 0.0;

          Particle.prototype.fForce = 0.0;

          Particle.prototype.fGrowDuration = 0.0;

          Particle.prototype.fWaitDuration = 0.0;

          Particle.prototype.fShrinkDuration = 0.0;

          Particle.prototype.fRadiusCurrent = 0.0;

          Particle.prototype.iFramesAlive = 0;

          Particle.prototype.bIsDead = false;

          return Particle;
        }.call(this);
        fnRender = function () {
          var iCount, p;
          ctxRender.fillStyle = '#000';
          ctxRender.fillRect(0, 0, w, h);
          p = oRender.pFirst;
          iCount = 0;
          while (p != null) {
            ctxRender.fillStyle =
              'rgba(' + window.aColor?.join(',') + ',' + p.fAlpha.toFixed(4) + ')';
            ctxRender.beginPath();
            ctxRender.arc(p.fProjX, p.fProjY, p.fRadiusCurrent, 0, 2 * fPI, false);
            ctxRender.closePath();
            ctxRender.fill();
            p = p.pNext;
            iCount += 1;
          }
        };
        fnNextFrame = function () {
          var iAddParticle, iCount, p, pNext;
          // oStats.begin();
          fAngle = (fAngle + fVX) % (2.0 * fPI);
          fSinAngle = fnSin(fAngle);
          fCosAngle = fnCos(fAngle);
          iAddParticle = 0;
          iCount = 0;
          while (iAddParticle++ < window.iNewParticlePerFrame) {
            p = fnSwapList(oBuffer.pFirst, oBuffer, oRender);
            p.fnInit();
          }
          p = oRender.pFirst;
          while (p != null) {
            pNext = p.pNext;
            p.fnUpdate();
            p = pNext;
            iCount++;
          }
          fnRender();
          // oStats.end();
          return fnRequestAnimationFrame(function () {
            return fnNextFrame();
          });
        };
        fnNextFrame();

        window.app = this;
      };

      fnAddEventListener(window, 'load', app);
    }).call(this);
  </script> -->
</section>
